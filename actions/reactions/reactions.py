import re
import sys
import time

import emoji
from rich import print
from rich.console import Console
from telethon.errors.rpcerrorlist import PhoneNumberBannedError
from telethon.errors.rpcerrorlist import UserDeactivatedBanError
from telethon.sync import TelegramClient
from telethon.tl.functions.channels import JoinChannelRequest
from telethon.tl.functions.messages import SendReactionRequest

from actions.pars.pars import opening_a_database_with_accounts
from system.Error.TelegramErrors import telegram_phone_number_banned_error
from system.auxiliary_functions.auxiliary_functions import clearing_console_showing_banner
from system.auxiliary_functions.global_variables import toaster
from system.telegram_actions.telegram_actions import get_from_the_list_phone_api_id_api_hash

console = Console()
# –†–µ–∞–∫—Ü–∏–∏ pip install --upgrade --force-reinstall https://github.com/LonamiWebs/Telethon/archive/v1.24.zip
# https://pypi.org/project/newthon/


"""
–°–∞–π—Ç—ã —Å–æ —Å–º–∞–π–ª–∞–º–∏
https://unicode-table.com/ru/
https://emojis.wiki/ru/
"""


def users_choice_of_reaction():
    """–í—ã–±–∏—Ä–∞–µ–º —Ä–µ–∞–∫—Ü–∏—é –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ —á–∞—Ç–µ / –∫–∞–Ω–∞–ª–µ"""
    # –ß–∏—Å—Ç–∏–º –∫–æ–Ω—Å–æ–ª—å –∏ –≤—ã–≤–æ–¥–∏–º –±–∞–Ω–µ—Ä
    clearing_console_showing_banner()
    print("[bold red][!] –î–∞–≤–∞–π—Ç–µ –≤—ã–±–µ—Ä–µ–º –∫–∞–∫—É—é —Ä–µ–∞–∫—Ü–∏—é –±—É–¥–µ–º —Å—Ç–∞–≤–∏—Ç—å")
    # –ü–µ—Ä–µ—á–∏—Å–ª—è–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ä–µ–∞–∫—Ü–∏–π
    print(emoji.emojize("[bold green][0] –ü–æ–¥–Ω—è—Ç—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü :thumbs_up:"))
    print(emoji.emojize("[bold green][1] –û–ø—É—â–µ–Ω–Ω—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü :thumbs_down:"))
    print(emoji.emojize("[bold green][2] –ö—Ä–∞—Å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ :red_heart:"))
    print(emoji.emojize("[bold green][3] –û–≥–æ–Ω—å :fire:"))
    print(emoji.emojize("[bold green][4] –•–ª–æ–ø—É—à–∫–∞ :party_popper:"))
    print(emoji.emojize("[bold green][5] –õ–∏—Ü–æ, –∫—Ä–∏—á–∞—â–µ–µ –æ—Ç —Å—Ç—Ä–∞—Ö–∞ :face_screaming_in_fear:"))
    print(emoji.emojize(
        "[bold green][6] –®–∏—Ä–æ–∫–æ —É–ª—ã–±–∞—é—â–µ–µ—Å—è –ª–∏—Ü–æ —Å —É–ª—ã–±–∞—é—â–∏–º–∏—Å—è –≥–ª–∞–∑–∞–º–∏ :beaming_face_with_smiling_eyes:"))
    print(emoji.emojize("[bold green][7] –õ–∏—Ü–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Ä—Ç–æ–º –∏ –≤ —Ö–æ–ª–æ–¥–Ω–æ–º –ø–æ—Ç—É :crying_face:"))
    print(emoji.emojize("[bold green][8] –§–µ–∫–∞–ª–∏–∏ :pile_of_poo:"))
    print(emoji.emojize("[bold green][9] –ê–ø–ª–æ–¥–∏—Ä—É—é—â–∏–µ —Ä—É–∫–∏ :clapping_hands:"))

    user_input = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä: ")

    if user_input == "0":
        # –ü–æ–¥–Ω—è—Ç—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü
        thumbs_up = "üëç"
        reactions_for_groups_and_messages(thumbs_up)
    elif user_input == "1":
        # –û–ø—É—â–µ–Ω–Ω—ã–π –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü
        thumbs_down = "üëé"
        reactions_for_groups_and_messages(thumbs_down)
    elif user_input == "2":
        # –ö—Ä–∞—Å–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ
        red_heart = "‚ù§"
        reactions_for_groups_and_messages(red_heart)
    elif user_input == "3":
        # –û–≥–æ–Ω—å
        fire = "üî•"
        reactions_for_groups_and_messages(fire)
    elif user_input == "4":
        # –•–ª–æ–ø—É—à–∫–∞
        party_popper = "üéâ"
        reactions_for_groups_and_messages(party_popper)
    elif user_input == "5":
        # –õ–∏—Ü–æ, –∫—Ä–∏—á–∞—â–µ–µ –æ—Ç —Å—Ç—Ä–∞—Ö–∞
        face_screaming_in_fear = "üò±"
        reactions_for_groups_and_messages(face_screaming_in_fear)
    elif user_input == "6":
        # –®–∏—Ä–æ–∫–æ —É–ª—ã–±–∞—é—â–µ–µ—Å—è –ª–∏—Ü–æ —Å —É–ª—ã–±–∞—é—â–∏–º–∏—Å—è –≥–ª–∞–∑–∞–º–∏
        beaming_face_with_smiling_eyes = "üòÅ"
        reactions_for_groups_and_messages(beaming_face_with_smiling_eyes)
    elif user_input == "7":
        # –õ–∏—Ü–æ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Ä—Ç–æ–º –∏ –≤ —Ö–æ–ª–æ–¥–Ω–æ–º –ø–æ—Ç—É
        crying_face = "üò¢"
        reactions_for_groups_and_messages(crying_face)
    elif user_input == "8":
        # –§–µ–∫–∞–ª–∏–∏
        pile_of_poo = "üí©"
        reactions_for_groups_and_messages(pile_of_poo)
    elif user_input == "9":
        # –ê–ø–ª–æ–¥–∏—Ä—É—é—â–∏–µ —Ä—É–∫–∏
        clapping_hands = "üëè"
        reactions_for_groups_and_messages(clapping_hands)


def reactions_for_groups_and_messages(reaction_input):
    """–í–≤–æ–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ"""

    # –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª
    chat = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≥—Ä—É–ø–ø—É / –∫–∞–Ω–∞–ª: ")
    # –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    message = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –ø–æ—Å—Ç: ")

    # –°—Å—ã–ª–∫–∞ –Ω–∞ –≥—Ä—É–ø–ø—É –∏–ª–∏ –∫–∞–Ω–∞–ª —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å–∏–º–≤–æ–ª–∞ /
    chat_mod = f"{chat}/"
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º –≤ –Ω–æ–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è, —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π
    message_number = re.sub(f'{chat_mod}', '', f"{message}")

    # –í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    records = choosing_a_number_of_reactions()
    # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é –Ω–∞ –ø–æ—Å—Ç, —Å–æ–æ–±—â–µ–Ω–∏–µ
    send_reaction_request(records, chat, int(message_number), reaction_input)


def choosing_a_number_of_reactions():
    """–í—ã–±–∏—Ä–∞–µ–º –ª–∏–º–∏—Ç—ã –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤"""
    print("[bold red]–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–æ—Å—Ç–∞–≤–ª–µ–Ω—ã —Ä–µ–∞–∫—Ü–∏–∏")

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ accounts/config.db
    cursor = opening_a_database_with_accounts()
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Ä–∞–±–æ—Ç–µ
    number_of_accounts = cursor.fetchall()
    print(f"[bold red]–í—Å–µ–≥–æ accounts: {len(number_of_accounts)}")
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É, –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –æ—à–∏–±–æ–∫ —Å –ø—Ä–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º —Ä–µ–∞–∫—Ü–∏–π
    cursor.close()

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ accounts/config.db
    cursor = opening_a_database_with_accounts()
    """
    fetchall() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø–∏—Å–µ–π –≤ –≤–∏–¥–µ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞;
    fetchmany(size) ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ –∑–∞–ø–∏—Å–µ–π –Ω–µ –±–æ–ª–µ–µ size;
    fetchone() ‚Äì –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å. https://goo.su/EFzsFU
    """
    # –í—ã–±–∏—Ä–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π
    user_input = console.input("[bold red][+] –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –¥–ª—è –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∞–∫—Ü–∏–π: ")
    records = cursor.fetchmany(int(user_input))
    return records


def send_reaction_request(records, chat, message, reaction_input):
    """–°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏–∏ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è"""
    for row in records:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ —Å–ø–∏—Å–∫–∞ phone, api_id, api_hash
        phone, api_id, api_hash = get_from_the_list_phone_api_id_api_hash(row)
        client = TelegramClient(f"accounts/{phone}", api_id, api_hash)
        try:
            # –ü–æ–¥—Å–æ–µ–¥–∏–Ω—è–µ–º—Å—è –∫ telegram
            client.connect()
            # –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ –≥—Ä—É–ø–ø—É
            client(JoinChannelRequest(chat))
            # –°—Ç–∞–≤–∏–º —Ä–µ–∞–∫—Ü–∏—é
            client(SendReactionRequest(chat, message, reaction=f'{reaction_input}'))
            time.sleep(1)
            # –û—Ç–∫–ª—é—á–∞–µ–º—Å—è –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
            client.disconnect()
        # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏ 
        except (PhoneNumberBannedError, UserDeactivatedBanError):
            # –£–¥–∞–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            telegram_phone_number_banned_error(client, phone)
            continue
        except KeyError:
            sys.exit(1)
    toaster.show_toast("Telegram_BOT_SMM", f"–†–∞–±–æ—Ç–∞ —Å –≥—Ä—É–ø–ø–æ–π {chat} –æ–∫–æ–Ω—á–µ–Ω–∞!", icon_path="system/ico/custom.ico",
                       duration=5)


if __name__ == "__main__":
    users_choice_of_reaction()
